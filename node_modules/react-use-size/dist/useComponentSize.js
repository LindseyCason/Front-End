"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var resize_observer_polyfill_1 = __importDefault(require("resize-observer-polyfill"));
function useComponentSize() {
    var _a = React.useState({
        height: 0,
        width: 0,
    }), size = _a[0], setSize = _a[1];
    var ref = React.useRef();
    var onResize = React.useCallback(function () {
        if (!ref.current) {
            return;
        }
        var newHeight = ref.current.offsetHeight;
        var newWidth = ref.current.offsetWidth;
        if (newHeight !== size.height || newWidth !== size.width) {
            setSize({
                height: newHeight,
                width: newWidth,
            });
        }
    }, [size.height, size.width]);
    React.useLayoutEffect(function () {
        if (!ref || !ref.current) {
            return;
        }
        var resizeObserver = new resize_observer_polyfill_1.default(onResize);
        resizeObserver.observe(ref.current);
        return function () { return resizeObserver.disconnect(); };
    }, [ref, onResize]);
    return __assign({ ref: ref }, size);
}
exports.useComponentSize = useComponentSize;
//# sourceMappingURL=useComponentSize.js.map